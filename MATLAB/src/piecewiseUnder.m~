function [pu_m,pu_c] = piecewiseUnder(x,cdf,usererror,pieces)
% This function provides the slope and y-intercepts for the given points.


    maxerror = [];
    N = length(x);
    xpoints(:,1) = x;
    ypoints(:,1) = cdf; 
    continueCondition = 1;
    pu_m = [];
    pu_c = [];
    
    while continueCondition == 1

        xeval = triu(ones(length(xpoints)-1,length(xpoints))).*xpoints';
        yeval = triu(ones(length(ypoints)-1,length(ypoints))).*ypoints';
        
        xdiff = xpoints(end)-xpoints(1:end-1);
        ydiff = ypoints(end)-ypoints(1:end-1);
        m(1,:) = ydiff./xdiff;
        c(1,:) = ypoints(end) - m'.*xpoints(end);

        y = m.*xeval'+c;
        y = tril(y);
        
        error = yeval'- y;

        % Remove those slopes and intercepts which have negative error: 
        
        poserror = find(all(error >= 0));
        
        
        mpos = m(all(error >= 0)); 
        cpos = c(error >= 0); 
        
        % Find max error amongst all slopes and intercepts remaining: 
        
        maxerror = max(abs(error),[],1);
        
        errorind = find(maxerror<usererror,1); 
        
        if isempty(errorind) || length(pu_m) > pieces
            
            break;
        else
            
            xpoints = xpoints(1:errorind);
            ypoints = ypoints(1:errorind);
            pu_m = [pu_m m(errorind)];
            pu_c = [pu_c c(errorind)];
            a(1) = xpoints(errorind);
            a(2) = ypoints(errorind);
        end
        
        
    end

end

